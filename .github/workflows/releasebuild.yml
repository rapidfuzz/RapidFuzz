name: Full Build

on:
  release:
    types:
      - published

  workflow_dispatch:

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: 'true'
      - uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest hypothesis pandas mypy Cython==3.1.3

      # The cythonized files allow installation from the sdist without cython
      - name: Generate cython
        run: |
          chmod +x ./tools/generate_cython.sh
          ./tools/generate_cython.sh

      - name: Build sdist
        run: |
          git apply ./tools/sdist.patch
          pip install build
          python -m build --sdist
          # test whether tarball contains all files required for compiling
          pip install dist/rapidfuzz-*.tar.gz -v

      #- name: Test type stubs
      #  # prevent import from rapidfuzz
      #  working-directory: .github
      #  run: |
      #    python -m mypy.stubtest rapidfuzz --ignore-missing-stub

      - name: Test with pytest and backtrace in case of SegFault
        run: |
          tools/seg_wrapper.sh pytest tests

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-sdist
          path: dist/*.tar.gz

  build_wheels_windows:
    name: Build wheel on ${{ matrix.os }}/auto
    needs: [build_sdist]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, windows-11-arm]
    env:
      CIBW_TEST_SKIP: "*-win32"
      CIBW_BUILD_VERBOSITY: 3

    steps:
      - uses: actions/download-artifact@v5
        with:
          name: artifact-sdist
          path: dist

      - name: Copy wheel
        run: copy dist/*.tar.gz rapidfuzz.tar.gz

      - uses: actions/setup-python@v6

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2.1
        with:
          package-dir: rapidfuzz.tar.gz
          output-dir: wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ github.job }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_wheels_macos:
    name: Build wheel on ${{ matrix.os }}/auto
    needs: [build_sdist]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14]
    env:
      CIBW_TEST_SKIP: "pp*-macosx_*"
      CIBW_BUILD_VERBOSITY: 3

    steps:
      - uses: actions/download-artifact@v5
        with:
          name: artifact-sdist
          path: dist

      - uses: actions/setup-python@v6

      - name: Copy wheel
        run: cp dist/*.tar.gz rapidfuzz.tar.gz

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2.1
        with:
          package-dir: rapidfuzz.tar.gz
          output-dir: wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ github.job }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_wheels_linux:
    name: Build wheels on ubuntu-latest/${{matrix.arch}}/${{matrix.python_tag}}
    needs: [build_sdist]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [auto, ppc64le, s390x]
        python_tag: ["cp310-*", "cp311-*", "cp312-*", "cp313-*", "cp314-*"]
    env:
      CIBW_ARCHS_LINUX: ${{matrix.arch}}
      CIBW_BUILD: ${{matrix.python_tag}}
      CIBW_TEST_SKIP: "{*_{aarch64,ppc64le,s390x},*musllinux_*}"
      CIBW_BUILD_VERBOSITY: 3

    steps:
      - uses: actions/download-artifact@v5
        with:
          name: artifact-sdist
          path: dist

      - uses: actions/setup-python@v6

      - name: Copy wheel
        run: cp dist/*.tar.gz rapidfuzz.tar.gz

      - uses: docker/setup-qemu-action@v3
        name: Set up QEMU
        with:
          # This should be temporary
          # xref https://github.com/docker/setup-qemu-action/issues/188
          # xref https://github.com/tonistiigi/binfmt/issues/215
          image: tonistiigi/binfmt:qemu-v8.1.5

      - name: Build wheel
        uses: pypa/cibuildwheel@v3.2.1
        with:
          package-dir: rapidfuzz.tar.gz
          output-dir: wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ github.job }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_wheels_linux_arm:
    name: Build wheels on ubuntu-24.04-arm/${{matrix.arch}}/${{matrix.python_tag}}
    needs: [build_sdist]
    runs-on: ubuntu-24.04-arm
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, armv7l]
        python_tag: ["cp310-*", "cp311-*", "cp312-*", "cp313-*", "cp314-*"]
    env:
      CIBW_ARCHS_LINUX: ${{matrix.arch}}
      CIBW_BUILD: ${{matrix.python_tag}}
      CIBW_TEST_SKIP: "{*_{aarch64,ppc64le,s390x},*musllinux_*}"
      CIBW_BUILD_VERBOSITY: 3

    steps:
      - uses: actions/download-artifact@v5
        with:
          name: artifact-sdist
          path: dist

      - uses: actions/setup-python@v6

      - name: Copy wheel
        run: cp dist/*.tar.gz rapidfuzz.tar.gz

      - name: Build wheel
        uses: pypa/cibuildwheel@v3.2.1
        with:
          package-dir: rapidfuzz.tar.gz
          output-dir: wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ github.job }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_wheels_pyodide:
    name: Build wheels on ubuntu-latest/pyodide
    needs: [build_sdist]
    runs-on: ubuntu-latest
    env:
      CIBW_PLATFORM: pyodide
      #CIBW_BUILD_VERBOSITY: 3

    steps:
      - uses: actions/download-artifact@v5
        with:
          name: artifact-sdist
          path: dist

      - uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Copy wheel
        run: cp dist/*.tar.gz rapidfuzz.tar.gz

      - name: Build wheel
        uses: pypa/cibuildwheel@v3.2.1
        with:
          package-dir: rapidfuzz.tar.gz
          output-dir: wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: pyodide-wheel
          path: ./wheelhouse/*.whl

  deploy-wheels:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build_wheels_windows, build_wheels_macos, build_wheels_linux, build_sdist]
    name: deploy wheels to pypi
    runs-on: ubuntu-latest
    environment: pypi-release
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v5
        with:
          path: dist
          pattern: artifact-*
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@v1.13.0
